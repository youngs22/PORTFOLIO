{
  "hash": "59f03a436aa11caf4dd55d0a4e6f2f72",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: LS 빅데이터 스쿨 homework3\ndate: '2024-07-25'\nauthor: youna\ncategories:\n  - bigdata\n---\n\n## Q1.\n\n::: {#6d9f7f66 .cell execution_count=1}\n``` {.python .cell-code}\n# 정규분포 pdf 값을 계산하는 자신만의\n# 파이썬 함수를 정의하고, \n# 정규분포 mu = 3, sigma = 2 의 pdf를 그릴 것.\n# 정규분포 pdf 값을 계산하는 자신만의\n# 파이썬 함수를 정의하고, \n# 정규분포 mu = 3, sigma = 2 의 pdf를 그릴 것.\nimport math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\nk = np.linspace(-4, 10, 100)\n\ndef normal_pdf(x, mu, sigma):\n    part1=(sigma * (math.sqrt(2*math.pi)))**(-1)\n    part2=np.exp(-(x-mu)**2/(2*sigma**2))\n    return part1 * part2\n\ny = normal_pdf(k, mu=3, sigma=2)\nplt.plot(k, y, color=\"pink\")\nplt.show()\nplt.clf()\n```\n\n::: {.cell-output .cell-output-display}\n![](index_files/figure-html/cell-2-output-1.png){width=587 height=411}\n:::\n\n::: {.cell-output .cell-output-display}\n```\n<Figure size 672x480 with 0 Axes>\n```\n:::\n:::\n\n\n## Q2.\n\n::: {#9ef0f8be .cell execution_count=2}\n``` {.python .cell-code}\n# 파이썬 scipy 패키지 사용해서 다음과 같은 확률을 구하시오.\n# X ~ N(2, 3^2)\n\nfrom scipy.stats import norm\n\n#1 P(X < 3)\nnorm.cdf(3, loc=2, scale=3)\n```\n\n::: {.cell-output .cell-output-display execution_count=2}\n```\nnp.float64(0.6305586598182363)\n```\n:::\n:::\n\n\n::: {#9c584e31 .cell execution_count=3}\n``` {.python .cell-code}\n#2 P(2 < X < 5)\nnorm.cdf(5, loc=2, scale=3) - norm.cdf(2, loc=2, scale=3)\n```\n\n::: {.cell-output .cell-output-display execution_count=3}\n```\nnp.float64(0.3413447460685429)\n```\n:::\n:::\n\n\n::: {#678df230 .cell execution_count=4}\n``` {.python .cell-code}\n#3 P(X < 3 or X > 7)\nnorm.cdf(3, loc=2, scale=3) + (1-norm.cdf(7, loc=2, scale=3))\n```\n\n::: {.cell-output .cell-output-display execution_count=4}\n```\nnp.float64(0.678349012091051)\n```\n:::\n:::\n\n\n## Q3.\n\n::: {#67fa4553 .cell execution_count=5}\n``` {.python .cell-code}\n# LS빅데이터 스쿨 학생들의 중간고사 점수는 \n# 평균이 30이고, 분산이 4인 정규분포\n# 상위 5%에 해당하는 학생 수는?\n\nx=np.arange(28)\nk = norm.pdf(x, loc=30, scale=2)\nsum(k>0.01645)\n```\n\n::: {.cell-output .cell-output-display execution_count=5}\n```\nnp.int64(2)\n```\n:::\n:::\n\n\n",
    "supporting": [
      "index_files"
    ],
    "filters": [],
    "includes": {}
  }
}