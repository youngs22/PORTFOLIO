{
  "hash": "11330b47cca517e3ea1bd8c45f0b290f",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: LS 빅데이터 스쿨 homework4\ndate: '2024-07-29'\nauthor: youna\ncategories:\n  - bigdata\n---\n\n## 균일분포 (3, 7)에서 20개의 표본을 뽑아서 분산을 2가지 방법으로 추정해보세요.\n* n-1로 나눈 것을 s_2, n으로 나눈 것을 k_2로 정의하고, s_2의 분포와 k_2의 분포를 그려주세요! (10000개 사용)\n* 각 분포 그래프에 모분산의 위치에 녹색 막대를 그려주세요.\n\n::: {#4167344c .cell execution_count=1}\n``` {.python .cell-code}\n# n\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom scipy.stats import uniform\n\nnp.random.seed(20240729)\nx = uniform.rvs(loc=3, scale=4, size=10000*20).reshape(-1,20)\nk_2 = x.var(axis=1, ddof=0)\npopulation_variance = uniform.var(loc=3, scale=4)\n\nplt.clf()\nsns.histplot(k_2, stat='density')\nplt.axvline(x=population_variance, color='green')\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](index_files/figure-html/cell-2-output-1.png){width=589 height=411}\n:::\n:::\n\n\n::: {#dde0c38b .cell execution_count=2}\n``` {.python .cell-code}\n#n-1\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom scipy.stats import uniform\n\nnp.random.seed(20240729)\nx = uniform.rvs(loc=3, scale=4, size=10000*20).reshape(-1,20)\ns_2 = x.var(axis=1, ddof=1)\npopulation_variance = uniform.var(loc=3, scale=4)\n\nplt.clf()\nsns.histplot(s_2, stat='density')\nplt.axvline(x=population_variance, color='green')\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](index_files/figure-html/cell-3-output-1.png){width=589 height=411}\n:::\n:::\n\n\n-----------------------------------------------------------------------------\n## 이전\n* n-1로 나눈 것을 s_2, n으로 나눈 것을 k_2로 정의하고, s_2의 분포와 k_2의 분포를 그려주세요! (10000개 사용)\n* 각 분포 그래프에 모분산의 위치에 녹색 막대를 그려주세요.\n\n::: {#6dbb6f95 .cell execution_count=3}\n``` {.python .cell-code}\nimport numpy as np\nfrom scipy.stats import norm\nimport matplotlib.pyplot as plt\n\nnp.random.seed(20240729)\nx_values = np.linspace(-16, 24, 10000)\nx = norm.rvs(loc=3, scale=7, size=20)\n\nk_2 = np.var(x, ddof=0) # n으로 나눈 값\nk_2\n```\n\n::: {.cell-output .cell-output-display execution_count=15}\n```\nnp.float64(21.53268317636923)\n```\n:::\n:::\n\n\n::: {#fabbad80 .cell execution_count=4}\n``` {.python .cell-code}\nimport numpy as np\nfrom scipy.stats import norm\nimport matplotlib.pyplot as plt\n\nnp.random.seed(20240729)\nx_values = np.linspace(-16, 24, 10000)\nx = norm.rvs(loc=3, scale=7, size=20)\n\ns_2 = np.var(x, ddof=1) # n-1로 나눈 값\ns_2\n```\n\n::: {.cell-output .cell-output-display execution_count=16}\n```\nnp.float64(22.66598229091498)\n```\n:::\n:::\n\n\n::: {#06682ca4 .cell execution_count=5}\n``` {.python .cell-code}\nimport numpy as np\nfrom scipy.stats import norm\nimport matplotlib.pyplot as plt\n\nnp.random.seed(20240729)\nx_values = np.linspace(-16, 24, 10000)\nx = norm.rvs(loc=3, scale=7, size=20)\n\nk_2 = np.var(x, ddof=0) # n으로 나눈 값\ns_2 = np.var(x, ddof=1) # n-1로 나눈 값\n\npdf_values1 = norm.pdf(x_values, loc=3, scale=np.sqrt(k_2))\npdf_values2 = norm.pdf(x_values, loc=3, scale=np.sqrt(s_2))\nplt.plot(x_values, pdf_values1, color=\"black\", linewidth=2) #n\nplt.plot(x_values, pdf_values2, color=\"blue\", linewidth=2) #n-1\nplt.show()\nplt.clf()\n```\n\n::: {.cell-output .cell-output-display}\n![](index_files/figure-html/cell-6-output-1.png){width=579 height=411}\n:::\n\n::: {.cell-output .cell-output-display}\n```\n<Figure size 672x480 with 0 Axes>\n```\n:::\n:::\n\n\n::: {#0461126b .cell execution_count=6}\n``` {.python .cell-code}\nimport numpy as np\nfrom scipy.stats import norm\nimport matplotlib.pyplot as plt\n\nnp.random.seed(20240729)\nx_values = np.linspace(-16, 24, 10000)\nx = norm.rvs(loc=3, scale=7, size=20)\n\nk_2 = np.var(x, ddof=0) # n으로 나눈 값\ns_2 = np.var(x, ddof=1) # n-1로 나눈 값\nx_mean = x.mean()\n\npdf_values1 = norm.pdf(x_values, loc=3, scale=np.sqrt(k_2))\npdf_values2 = norm.pdf(x_values, loc=3, scale=np.sqrt(s_2))\nplt.plot(x_values, pdf_values1, color=\"black\", linewidth=2) #n\nplt.plot(x_values, pdf_values2, color=\"blue\", linewidth=2) #n-1\nplt.axvline(x_mean, color='green', linestyle=\"--\", linewidth=1, label='Mean')\nplt.show()\nplt.clf()\n```\n\n::: {.cell-output .cell-output-display}\n![](index_files/figure-html/cell-7-output-1.png){width=579 height=411}\n:::\n\n::: {.cell-output .cell-output-display}\n```\n<Figure size 672x480 with 0 Axes>\n```\n:::\n:::\n\n\n## 결과를 살펴보고, 왜 n-1로 나눈 것을 분산을 추정하는 지표로 사용하는 것이 타당한지 써주세요!\nn-1로 나눈 모분산의 그래프(파란선)이 모평균에 더 가깝기 때문에\nn-1로 나눈 것을 분산으로 추정하는 지표로 사용하는 것이 타당하다.\n\n",
    "supporting": [
      "index_files"
    ],
    "filters": [],
    "includes": {}
  }
}