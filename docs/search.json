[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\n\n1 + 1\n\n2"
  },
  {
    "objectID": "LS bigdata school.html",
    "href": "LS bigdata school.html",
    "title": "LS 빅데이터 스쿨",
    "section": "",
    "text": "SHOW this site"
  },
  {
    "objectID": "hw1.html",
    "href": "hw1.html",
    "title": "homework1",
    "section": "",
    "text": "2024-07-15\n\n84 page\n\nQ1.\n\nimport pandas as pd\nx=pd.DataFrame({\"제품\":[\"사과\",\"딸기\",\"수박\"],\n                \"가격\":[1800,1500,3000],\n                \"판매량\":[24,38,13]})\nx\n\n\n\n\n\n\n\n\n제품\n가격\n판매량\n\n\n\n\n0\n사과\n1800\n24\n\n\n1\n딸기\n1500\n38\n\n\n2\n수박\n3000\n13\n\n\n\n\n\n\n\n\n\nQ2.\n\nprint(\"가격 평균 : \",sum(x[\"가격\"])/3)\nprint(\"판매량 평균 : \",sum(x[\"판매량\"])/3)\n\n가격 평균 :  2100.0\n판매량 평균 :  25.0\n\n\n\n\n\n115 page\n\nimport pandas as pd\nimport pydataset\ndf=pd.read_csv(\"mpg.csv\")\ndf_mpg=df.copy()\n\ndf_mpg=df_mpg.rename(columns={\"cty\":\"city\"})\ndf_mpg=df_mpg.rename(columns={\"hwy\":\"highway\"})\ndf_mpg\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncity\nhighway\nfl\ncategory\n\n\n\n\n0\naudi\na4\n1.8\n1999\n4\nauto(l5)\nf\n18\n29\np\ncompact\n\n\n1\naudi\na4\n1.8\n1999\n4\nmanual(m5)\nf\n21\n29\np\ncompact\n\n\n2\naudi\na4\n2.0\n2008\n4\nmanual(m6)\nf\n20\n31\np\ncompact\n\n\n3\naudi\na4\n2.0\n2008\n4\nauto(av)\nf\n21\n30\np\ncompact\n\n\n4\naudi\na4\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\ncompact\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n229\nvolkswagen\npassat\n2.0\n2008\n4\nauto(s6)\nf\n19\n28\np\nmidsize\n\n\n230\nvolkswagen\npassat\n2.0\n2008\n4\nmanual(m6)\nf\n21\n29\np\nmidsize\n\n\n231\nvolkswagen\npassat\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\nmidsize\n\n\n232\nvolkswagen\npassat\n2.8\n1999\n6\nmanual(m5)\nf\n18\n26\np\nmidsize\n\n\n233\nvolkswagen\npassat\n3.6\n2008\n6\nauto(s6)\nf\n17\n26\np\nmidsize\n\n\n\n\n234 rows × 11 columns\n\n\n\n\n\n130 page\n\nQ1.\n\nimport pandas as pd\nimport pydataset\n\ndf_midwest=pd.read_csv('midwest.csv')\ndf_midwest.head()\ndf_midwest.tail()\ndf_midwest.shape\ndf_midwest.info()\ndf_midwest.describe()\n\n&lt;class 'pandas.core.frame.DataFrame'&gt;\nRangeIndex: 437 entries, 0 to 436\nData columns (total 28 columns):\n #   Column                Non-Null Count  Dtype  \n---  ------                --------------  -----  \n 0   PID                   437 non-null    int64  \n 1   county                437 non-null    object \n 2   state                 437 non-null    object \n 3   area                  437 non-null    float64\n 4   poptotal              437 non-null    int64  \n 5   popdensity            437 non-null    float64\n 6   popwhite              437 non-null    int64  \n 7   popblack              437 non-null    int64  \n 8   popamerindian         437 non-null    int64  \n 9   popasian              437 non-null    int64  \n 10  popother              437 non-null    int64  \n 11  percwhite             437 non-null    float64\n 12  percblack             437 non-null    float64\n 13  percamerindan         437 non-null    float64\n 14  percasian             437 non-null    float64\n 15  percother             437 non-null    float64\n 16  popadults             437 non-null    int64  \n 17  perchsd               437 non-null    float64\n 18  percollege            437 non-null    float64\n 19  percprof              437 non-null    float64\n 20  poppovertyknown       437 non-null    int64  \n 21  percpovertyknown      437 non-null    float64\n 22  percbelowpoverty      437 non-null    float64\n 23  percchildbelowpovert  437 non-null    float64\n 24  percadultpoverty      437 non-null    float64\n 25  percelderlypoverty    437 non-null    float64\n 26  inmetro               437 non-null    int64  \n 27  category              437 non-null    object \ndtypes: float64(15), int64(10), object(3)\nmemory usage: 95.7+ KB\n\n\n\n\n\n\n\n\n\nPID\narea\npoptotal\npopdensity\npopwhite\npopblack\npopamerindian\npopasian\npopother\npercwhite\n...\nperchsd\npercollege\npercprof\npoppovertyknown\npercpovertyknown\npercbelowpoverty\npercchildbelowpovert\npercadultpoverty\npercelderlypoverty\ninmetro\n\n\n\n\ncount\n437.000000\n437.000000\n4.370000e+02\n437.000000\n4.370000e+02\n4.370000e+02\n437.000000\n437.000000\n437.000000\n437.000000\n...\n437.000000\n437.000000\n437.000000\n4.370000e+02\n437.000000\n437.000000\n437.000000\n437.000000\n437.000000\n437.000000\n\n\nmean\n1437.338673\n0.033169\n9.613030e+04\n3097.742985\n8.183992e+04\n1.102388e+04\n343.109840\n1310.464531\n1612.931350\n95.558441\n...\n73.965546\n18.272736\n4.447259\n9.364228e+04\n97.110267\n12.510505\n16.447464\n10.918798\n11.389043\n0.343249\n\n\nstd\n876.390266\n0.014679\n2.981705e+05\n7664.751786\n2.001966e+05\n7.895827e+04\n868.926751\n9518.394189\n18526.540699\n7.087358\n...\n5.843177\n6.261908\n2.408427\n2.932351e+05\n2.749863\n5.150155\n7.228634\n5.109166\n3.661259\n0.475338\n\n\nmin\n561.000000\n0.005000\n1.701000e+03\n85.050000\n4.160000e+02\n0.000000e+00\n4.000000\n0.000000\n0.000000\n10.694087\n...\n46.912261\n7.336108\n0.520291\n1.696000e+03\n80.902441\n2.180168\n1.918955\n1.938504\n3.547067\n0.000000\n\n\n25%\n670.000000\n0.024000\n1.884000e+04\n622.407407\n1.863000e+04\n2.900000e+01\n44.000000\n35.000000\n20.000000\n94.886032\n...\n71.325329\n14.113725\n2.997957\n1.836400e+04\n96.894572\n9.198715\n11.624088\n7.668009\n8.911763\n0.000000\n\n\n50%\n1221.000000\n0.030000\n3.532400e+04\n1156.208330\n3.447100e+04\n2.010000e+02\n94.000000\n102.000000\n66.000000\n98.032742\n...\n74.246891\n16.797562\n3.814239\n3.378800e+04\n98.169562\n11.822313\n15.270164\n10.007610\n10.869119\n0.000000\n\n\n75%\n2059.000000\n0.038000\n7.565100e+04\n2330.000000\n7.296800e+04\n1.291000e+03\n288.000000\n401.000000\n345.000000\n99.074935\n...\n77.195345\n20.549893\n4.949324\n7.284000e+04\n98.598636\n15.133226\n20.351878\n13.182182\n13.412162\n1.000000\n\n\nmax\n3052.000000\n0.110000\n5.105067e+06\n88018.396600\n3.204947e+06\n1.317147e+06\n10289.000000\n188565.000000\n384119.000000\n99.822821\n...\n88.898674\n48.078510\n20.791321\n5.023523e+06\n99.860384\n48.691099\n64.308477\n43.312464\n31.161972\n1.000000\n\n\n\n\n8 rows × 25 columns\n\n\n\n\n\nQ2.\n\ndf_midwest=df_midwest.rename(columns={\"poptotal\":\"total\"})\ndf_midwest=df_midwest.rename(columns={\"popasian\":\"asian\"})\ndf_midwest[[\"total\",\"asian\"]]\n\n\n\n\n\n\n\n\ntotal\nasian\n\n\n\n\n0\n66090\n249\n\n\n1\n10626\n48\n\n\n2\n14991\n16\n\n\n3\n30806\n150\n\n\n4\n5836\n5\n\n\n...\n...\n...\n\n\n432\n304715\n2699\n\n\n433\n46104\n92\n\n\n434\n19385\n43\n\n\n435\n140320\n1728\n\n\n436\n73605\n722\n\n\n\n\n437 rows × 2 columns\n\n\n\n\n\nQ3.\n\ndf_midwest[\"asian_ptg\"]= df_midwest[\"asian\"] / df_midwest[\"total\"] * 100\ndf_midwest\n\n\n\n\n\n\n\n\nPID\ncounty\nstate\narea\ntotal\npopdensity\npopwhite\npopblack\npopamerindian\nasian\n...\npercprof\npoppovertyknown\npercpovertyknown\npercbelowpoverty\npercchildbelowpovert\npercadultpoverty\npercelderlypoverty\ninmetro\ncategory\nasian_ptg\n\n\n\n\n0\n561\nADAMS\nIL\n0.052\n66090\n1270.961540\n63917\n1702\n98\n249\n...\n4.355859\n63628\n96.274777\n13.151443\n18.011717\n11.009776\n12.443812\n0\nAAR\n0.376759\n\n\n1\n562\nALEXANDER\nIL\n0.014\n10626\n759.000000\n7054\n3496\n19\n48\n...\n2.870315\n10529\n99.087145\n32.244278\n45.826514\n27.385647\n25.228976\n0\nLHR\n0.451722\n\n\n2\n563\nBOND\nIL\n0.022\n14991\n681.409091\n14477\n429\n35\n16\n...\n4.488572\n14235\n94.956974\n12.068844\n14.036061\n10.852090\n12.697410\n0\nAAR\n0.106731\n\n\n3\n564\nBOONE\nIL\n0.017\n30806\n1812.117650\n29344\n127\n46\n150\n...\n4.197800\n30337\n98.477569\n7.209019\n11.179536\n5.536013\n6.217047\n1\nALU\n0.486918\n\n\n4\n565\nBROWN\nIL\n0.018\n5836\n324.222222\n5264\n547\n14\n5\n...\n3.367680\n4815\n82.505140\n13.520249\n13.022889\n11.143211\n19.200000\n0\nAAR\n0.085675\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n432\n3048\nWAUKESHA\nWI\n0.034\n304715\n8962.205880\n298313\n1096\n672\n2699\n...\n7.667090\n299802\n98.387674\n3.121060\n3.785820\n2.590061\n4.085479\n1\nHLU\n0.885746\n\n\n433\n3049\nWAUPACA\nWI\n0.045\n46104\n1024.533330\n45695\n22\n125\n92\n...\n3.138596\n44412\n96.330036\n8.488697\n10.071411\n6.953799\n10.338641\n0\nAAR\n0.199549\n\n\n434\n3050\nWAUSHARA\nWI\n0.037\n19385\n523.918919\n19094\n29\n70\n43\n...\n2.620907\n19163\n98.854785\n13.786985\n20.050708\n11.695784\n11.804558\n0\nAAR\n0.221821\n\n\n435\n3051\nWINNEBAGO\nWI\n0.035\n140320\n4009.142860\n136822\n697\n685\n1728\n...\n5.659847\n133950\n95.460376\n8.804031\n10.592031\n8.660587\n6.661094\n1\nHAU\n1.231471\n\n\n436\n3052\nWOOD\nWI\n0.048\n73605\n1533.437500\n72157\n90\n481\n722\n...\n4.583725\n72685\n98.750085\n8.525831\n11.162997\n7.375656\n7.882918\n0\nAAR\n0.980912\n\n\n\n\n437 rows × 29 columns\n\n\n\n\n\nQ4.\n\nimport numpy as np\n\nasian_ptg_mean= sum(df_midwest[\"asian_ptg\"])/437\ndf_midwest[\"large_small\"]=np.where(df_midwest[\"asian_ptg\"] &gt; asian_ptg_mean, \"large\", \"small\")\ndf_midwest\n\n\n\n\n\n\n\n\nPID\ncounty\nstate\narea\ntotal\npopdensity\npopwhite\npopblack\npopamerindian\nasian\n...\npoppovertyknown\npercpovertyknown\npercbelowpoverty\npercchildbelowpovert\npercadultpoverty\npercelderlypoverty\ninmetro\ncategory\nasian_ptg\nlarge_small\n\n\n\n\n0\n561\nADAMS\nIL\n0.052\n66090\n1270.961540\n63917\n1702\n98\n249\n...\n63628\n96.274777\n13.151443\n18.011717\n11.009776\n12.443812\n0\nAAR\n0.376759\nsmall\n\n\n1\n562\nALEXANDER\nIL\n0.014\n10626\n759.000000\n7054\n3496\n19\n48\n...\n10529\n99.087145\n32.244278\n45.826514\n27.385647\n25.228976\n0\nLHR\n0.451722\nsmall\n\n\n2\n563\nBOND\nIL\n0.022\n14991\n681.409091\n14477\n429\n35\n16\n...\n14235\n94.956974\n12.068844\n14.036061\n10.852090\n12.697410\n0\nAAR\n0.106731\nsmall\n\n\n3\n564\nBOONE\nIL\n0.017\n30806\n1812.117650\n29344\n127\n46\n150\n...\n30337\n98.477569\n7.209019\n11.179536\n5.536013\n6.217047\n1\nALU\n0.486918\nsmall\n\n\n4\n565\nBROWN\nIL\n0.018\n5836\n324.222222\n5264\n547\n14\n5\n...\n4815\n82.505140\n13.520249\n13.022889\n11.143211\n19.200000\n0\nAAR\n0.085675\nsmall\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n432\n3048\nWAUKESHA\nWI\n0.034\n304715\n8962.205880\n298313\n1096\n672\n2699\n...\n299802\n98.387674\n3.121060\n3.785820\n2.590061\n4.085479\n1\nHLU\n0.885746\nlarge\n\n\n433\n3049\nWAUPACA\nWI\n0.045\n46104\n1024.533330\n45695\n22\n125\n92\n...\n44412\n96.330036\n8.488697\n10.071411\n6.953799\n10.338641\n0\nAAR\n0.199549\nsmall\n\n\n434\n3050\nWAUSHARA\nWI\n0.037\n19385\n523.918919\n19094\n29\n70\n43\n...\n19163\n98.854785\n13.786985\n20.050708\n11.695784\n11.804558\n0\nAAR\n0.221821\nsmall\n\n\n435\n3051\nWINNEBAGO\nWI\n0.035\n140320\n4009.142860\n136822\n697\n685\n1728\n...\n133950\n95.460376\n8.804031\n10.592031\n8.660587\n6.661094\n1\nHAU\n1.231471\nlarge\n\n\n436\n3052\nWOOD\nWI\n0.048\n73605\n1533.437500\n72157\n90\n481\n722\n...\n72685\n98.750085\n8.525831\n11.162997\n7.375656\n7.882918\n0\nAAR\n0.980912\nlarge\n\n\n\n\n437 rows × 30 columns\n\n\n\n\n\nQ5.\n\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\n\nplt.clf()\nlarge_small_count = df_midwest[\"large_small\"].value_counts()\nlarge_small_count.plot.bar(rot=0,color=\"red\")\nplt.show()\n\n# 또다른 그래프 만드는 방법\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n\nplt.clf()\nsns.countplot(data=df_midwest, x=\"large_small\", color=\"yellow\", dodge=True)\nplt.show()"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "PORTFOLIO_Youna",
    "section": "",
    "text": "“안녕하세요, 유나의 포트폴리오 홈페이지에 오신 것을 환영합니다.”"
  },
  {
    "objectID": "hw2.html",
    "href": "hw2.html",
    "title": "homework2",
    "section": "",
    "text": "2024-07-16"
  },
  {
    "objectID": "hw2.html#page",
    "href": "hw2.html#page",
    "title": "homework2",
    "section": "144 page",
    "text": "144 page\n\nQ1\n\nimport pandas as pd\nimport pydataset\n\nmpg = pydataset.data(\"mpg\")\n\nmpg.head()\n\ndispl4 =mpg.query(\"displ&lt;=4\")\ndispl5 =mpg.query(\"displ&gt;=5\")\n\ndispl4[\"hwy\"].mean()\ndispl5[\"hwy\"].mean()\n\ndispl5[\"hwy\"].mean() &lt; displ4[\"hwy\"].mean()\n\nnp.True_\n\n\n\n\nQ2\n\nmpg_audi = mpg.query(\"manufacturer == 'audi'\")\nmpg_toyota =mpg.query(\"manufacturer == 'toyota'\")\n\n\nmpg_audi[\"cty\"].mean()\nmpg_toyota[\"cty\"].mean()\n\nmpg_audi[\"cty\"].mean() &lt; mpg_toyota[\"cty\"].mean()\n\nnp.True_\n\n\n\n\nQ3\n\nmpg2=mpg.query(\"manufacturer=='chevrolet'|manufacturer=='ford'|manufacturer=='honda'\")\nmpg2[\"hwy\"].mean()\n\nnp.float64(22.50943396226415)"
  },
  {
    "objectID": "hw2.html#page-1",
    "href": "hw2.html#page-1",
    "title": "homework2",
    "section": "153 page",
    "text": "153 page\n\nQ1\n\nmpg_audi = mpg.query(\"manufacturer=='audi'\")\nmpg_audi.sort_values(\"hwy\",ascending = False).head()\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncty\nhwy\nfl\nclass\n\n\n\n\n3\naudi\na4\n2.0\n2008\n4\nmanual(m6)\nf\n20\n31\np\ncompact\n\n\n4\naudi\na4\n2.0\n2008\n4\nauto(av)\nf\n21\n30\np\ncompact\n\n\n2\naudi\na4\n1.8\n1999\n4\nmanual(m5)\nf\n21\n29\np\ncompact\n\n\n1\naudi\na4\n1.8\n1999\n4\nauto(l5)\nf\n18\n29\np\ncompact\n\n\n10\naudi\na4 quattro\n2.0\n2008\n4\nmanual(m6)\n4\n20\n28\np\ncompact"
  },
  {
    "objectID": "hw2.html#page-2",
    "href": "hw2.html#page-2",
    "title": "homework2",
    "section": "158 page",
    "text": "158 page\n\nQ1\n\nimport pandas as pd\nimport pydataset\n\nmpg = pydataset.data(\"mpg\")\n\nmpg_copy = mpg.copy()\nmpg_copy\n\nmpg_copy = mpg_copy.assign(sum_cty_hwy = mpg_copy[\"cty\"] + mpg_copy[\"hwy\"])\nmpg_copy.head()\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncty\nhwy\nfl\nclass\nsum_cty_hwy\n\n\n\n\n1\naudi\na4\n1.8\n1999\n4\nauto(l5)\nf\n18\n29\np\ncompact\n47\n\n\n2\naudi\na4\n1.8\n1999\n4\nmanual(m5)\nf\n21\n29\np\ncompact\n50\n\n\n3\naudi\na4\n2.0\n2008\n4\nmanual(m6)\nf\n20\n31\np\ncompact\n51\n\n\n4\naudi\na4\n2.0\n2008\n4\nauto(av)\nf\n21\n30\np\ncompact\n51\n\n\n5\naudi\na4\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\ncompact\n42\n\n\n\n\n\n\n\n\n\nQ2\n\nmpg_copy = mpg_copy.assign(mean_cty_hwy = mpg_copy[\"sum_cty_hwy\"] / 2)\nmpg_copy\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncty\nhwy\nfl\nclass\nsum_cty_hwy\nmean_cty_hwy\n\n\n\n\n1\naudi\na4\n1.8\n1999\n4\nauto(l5)\nf\n18\n29\np\ncompact\n47\n23.5\n\n\n2\naudi\na4\n1.8\n1999\n4\nmanual(m5)\nf\n21\n29\np\ncompact\n50\n25.0\n\n\n3\naudi\na4\n2.0\n2008\n4\nmanual(m6)\nf\n20\n31\np\ncompact\n51\n25.5\n\n\n4\naudi\na4\n2.0\n2008\n4\nauto(av)\nf\n21\n30\np\ncompact\n51\n25.5\n\n\n5\naudi\na4\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\ncompact\n42\n21.0\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n230\nvolkswagen\npassat\n2.0\n2008\n4\nauto(s6)\nf\n19\n28\np\nmidsize\n47\n23.5\n\n\n231\nvolkswagen\npassat\n2.0\n2008\n4\nmanual(m6)\nf\n21\n29\np\nmidsize\n50\n25.0\n\n\n232\nvolkswagen\npassat\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\nmidsize\n42\n21.0\n\n\n233\nvolkswagen\npassat\n2.8\n1999\n6\nmanual(m5)\nf\n18\n26\np\nmidsize\n44\n22.0\n\n\n234\nvolkswagen\npassat\n3.6\n2008\n6\nauto(s6)\nf\n17\n26\np\nmidsize\n43\n21.5\n\n\n\n\n234 rows × 13 columns\n\n\n\n\n\nQ3\n\nmpg_copy.sort_values(\"mean_cty_hwy\", ascending = False).head(3)\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncty\nhwy\nfl\nclass\nsum_cty_hwy\nmean_cty_hwy\n\n\n\n\n222\nvolkswagen\nnew beetle\n1.9\n1999\n4\nmanual(m5)\nf\n35\n44\nd\nsubcompact\n79\n39.5\n\n\n213\nvolkswagen\njetta\n1.9\n1999\n4\nmanual(m5)\nf\n33\n44\nd\ncompact\n77\n38.5\n\n\n223\nvolkswagen\nnew beetle\n1.9\n1999\n4\nauto(l4)\nf\n29\n41\nd\nsubcompact\n70\n35.0\n\n\n\n\n\n\n\n\n\nQ4\n\nmpg.assign(\n    sum_cty_hwy = mpg[\"cty\"] + mpg[\"hwy\"],\n    mean_cty_hwy = mpg[\"cty\"] + mpg[\"hwy\"] / 2 )\\\n    .sort_values(\"mean_cty_hwy\", ascending = False)\\\n    .head(3)\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncty\nhwy\nfl\nclass\nsum_cty_hwy\nmean_cty_hwy\n\n\n\n\n222\nvolkswagen\nnew beetle\n1.9\n1999\n4\nmanual(m5)\nf\n35\n44\nd\nsubcompact\n79\n57.0\n\n\n213\nvolkswagen\njetta\n1.9\n1999\n4\nmanual(m5)\nf\n33\n44\nd\ncompact\n77\n55.0\n\n\n223\nvolkswagen\nnew beetle\n1.9\n1999\n4\nauto(l4)\nf\n29\n41\nd\nsubcompact\n70\n49.5\n\n\n\n\n\n\n\n\n\nQ4 또 다르게\n\nmpg.assign(\n    total = lambda x: x[\"cty\"] + x[\"hwy\"],\n    mean_cty_hwy = lambda x: x[\"total\"] / 2 )\\\n    .sort_values(\"mean_cty_hwy\", ascending = False)\\\n    .head(3)\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncty\nhwy\nfl\nclass\ntotal\nmean_cty_hwy\n\n\n\n\n222\nvolkswagen\nnew beetle\n1.9\n1999\n4\nmanual(m5)\nf\n35\n44\nd\nsubcompact\n79\n39.5\n\n\n213\nvolkswagen\njetta\n1.9\n1999\n4\nmanual(m5)\nf\n33\n44\nd\ncompact\n77\n38.5\n\n\n223\nvolkswagen\nnew beetle\n1.9\n1999\n4\nauto(l4)\nf\n29\n41\nd\nsubcompact\n70\n35.0"
  },
  {
    "objectID": "blog.html",
    "href": "blog.html",
    "title": "Blog",
    "section": "",
    "text": "LS 빅데이터 스쿨 homework3\n\n\n\n\n\n\nbigdata\n\n\n\n\n\n\n\n\n\nJul 25, 2024\n\n\nyouna\n\n\n\n\n\n\n\n\n\n\n\n\nLS 빅데이터 스쿨 homework_etc\n\n\n\n\n\n\nbigdata\n\n\n\n\n\n\n\n\n\nJul 22, 2024\n\n\nyouna\n\n\n\n\n\n\n\n\n\n\n\n\nLS 빅데이터 스쿨 homework2\n\n\n\n\n\n\nbigdata\n\n\n\n\n\n\n\n\n\nJul 16, 2024\n\n\nyouna\n\n\n\n\n\n\n\n\n\n\n\n\nLS 빅데이터 스쿨 homework1\n\n\n\n\n\n\nbigdata\n\n\n\n\n\n\n\n\n\nJul 15, 2024\n\n\nyouna\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "posts/hw1/index.html",
    "href": "posts/hw1/index.html",
    "title": "LS 빅데이터 스쿨 homework1",
    "section": "",
    "text": "import pandas as pd\nx=pd.DataFrame({\"제품\":[\"사과\",\"딸기\",\"수박\"],\n                \"가격\":[1800,1500,3000],\n                \"판매량\":[24,38,13]})\nx\n\n\n\n\n\n\n\n\n제품\n가격\n판매량\n\n\n\n\n0\n사과\n1800\n24\n\n\n1\n딸기\n1500\n38\n\n\n2\n수박\n3000\n13\n\n\n\n\n\n\n\n\n\n\n\nprint(\"가격 평균 : \",sum(x[\"가격\"])/3)\nprint(\"판매량 평균 : \",sum(x[\"판매량\"])/3)\n\n가격 평균 :  2100.0\n판매량 평균 :  25.0"
  },
  {
    "objectID": "posts/hw2/index.html",
    "href": "posts/hw2/index.html",
    "title": "LS 빅데이터 스쿨 homework2",
    "section": "",
    "text": "import pandas as pd\nimport pydataset\n\nmpg = pydataset.data(\"mpg\")\n\nmpg.head()\n\ndispl4 =mpg.query(\"displ&lt;=4\")\ndispl5 =mpg.query(\"displ&gt;=5\")\n\ndispl4[\"hwy\"].mean()\ndispl5[\"hwy\"].mean()\n\ndispl5[\"hwy\"].mean() &lt; displ4[\"hwy\"].mean()\n\nnp.True_\n\n\n\n\n\n\nmpg_audi = mpg.query(\"manufacturer == 'audi'\")\nmpg_toyota =mpg.query(\"manufacturer == 'toyota'\")\n\n\nmpg_audi[\"cty\"].mean()\nmpg_toyota[\"cty\"].mean()\n\nmpg_audi[\"cty\"].mean() &lt; mpg_toyota[\"cty\"].mean()\n\nnp.True_\n\n\n\n\n\n\nmpg2=mpg.query(\"manufacturer=='chevrolet'|manufacturer=='ford'|manufacturer=='honda'\")\nmpg2[\"hwy\"].mean()\n\nnp.float64(22.50943396226415)"
  },
  {
    "objectID": "posts/hw2/index.html#page",
    "href": "posts/hw2/index.html#page",
    "title": "LS 빅데이터 스쿨 homework2",
    "section": "",
    "text": "import pandas as pd\nimport pydataset\n\nmpg = pydataset.data(\"mpg\")\n\nmpg.head()\n\ndispl4 =mpg.query(\"displ&lt;=4\")\ndispl5 =mpg.query(\"displ&gt;=5\")\n\ndispl4[\"hwy\"].mean()\ndispl5[\"hwy\"].mean()\n\ndispl5[\"hwy\"].mean() &lt; displ4[\"hwy\"].mean()\n\nnp.True_\n\n\n\n\n\n\nmpg_audi = mpg.query(\"manufacturer == 'audi'\")\nmpg_toyota =mpg.query(\"manufacturer == 'toyota'\")\n\n\nmpg_audi[\"cty\"].mean()\nmpg_toyota[\"cty\"].mean()\n\nmpg_audi[\"cty\"].mean() &lt; mpg_toyota[\"cty\"].mean()\n\nnp.True_\n\n\n\n\n\n\nmpg2=mpg.query(\"manufacturer=='chevrolet'|manufacturer=='ford'|manufacturer=='honda'\")\nmpg2[\"hwy\"].mean()\n\nnp.float64(22.50943396226415)"
  },
  {
    "objectID": "posts/hw2/index.html#page-1",
    "href": "posts/hw2/index.html#page-1",
    "title": "LS 빅데이터 스쿨 homework2",
    "section": "153 page",
    "text": "153 page\n\nQ1.\n\nmpg_audi = mpg.query(\"manufacturer=='audi'\")\nmpg_audi.sort_values(\"hwy\",ascending = False).head()\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncty\nhwy\nfl\nclass\n\n\n\n\n3\naudi\na4\n2.0\n2008\n4\nmanual(m6)\nf\n20\n31\np\ncompact\n\n\n4\naudi\na4\n2.0\n2008\n4\nauto(av)\nf\n21\n30\np\ncompact\n\n\n2\naudi\na4\n1.8\n1999\n4\nmanual(m5)\nf\n21\n29\np\ncompact\n\n\n1\naudi\na4\n1.8\n1999\n4\nauto(l5)\nf\n18\n29\np\ncompact\n\n\n10\naudi\na4 quattro\n2.0\n2008\n4\nmanual(m6)\n4\n20\n28\np\ncompact"
  },
  {
    "objectID": "posts/hw2/index.html#page-2",
    "href": "posts/hw2/index.html#page-2",
    "title": "LS 빅데이터 스쿨 homework2",
    "section": "158 page",
    "text": "158 page\n\nQ1.\n\nimport pandas as pd\nimport pydataset\n\nmpg = pydataset.data(\"mpg\")\n\nmpg_copy = mpg.copy()\nmpg_copy\n\nmpg_copy = mpg_copy.assign(sum_cty_hwy = mpg_copy[\"cty\"] + mpg_copy[\"hwy\"])\nmpg_copy.head()\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncty\nhwy\nfl\nclass\nsum_cty_hwy\n\n\n\n\n1\naudi\na4\n1.8\n1999\n4\nauto(l5)\nf\n18\n29\np\ncompact\n47\n\n\n2\naudi\na4\n1.8\n1999\n4\nmanual(m5)\nf\n21\n29\np\ncompact\n50\n\n\n3\naudi\na4\n2.0\n2008\n4\nmanual(m6)\nf\n20\n31\np\ncompact\n51\n\n\n4\naudi\na4\n2.0\n2008\n4\nauto(av)\nf\n21\n30\np\ncompact\n51\n\n\n5\naudi\na4\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\ncompact\n42\n\n\n\n\n\n\n\n\n\nQ2.\n\nmpg_copy = mpg_copy.assign(mean_cty_hwy = mpg_copy[\"sum_cty_hwy\"] / 2)\nmpg_copy\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncty\nhwy\nfl\nclass\nsum_cty_hwy\nmean_cty_hwy\n\n\n\n\n1\naudi\na4\n1.8\n1999\n4\nauto(l5)\nf\n18\n29\np\ncompact\n47\n23.5\n\n\n2\naudi\na4\n1.8\n1999\n4\nmanual(m5)\nf\n21\n29\np\ncompact\n50\n25.0\n\n\n3\naudi\na4\n2.0\n2008\n4\nmanual(m6)\nf\n20\n31\np\ncompact\n51\n25.5\n\n\n4\naudi\na4\n2.0\n2008\n4\nauto(av)\nf\n21\n30\np\ncompact\n51\n25.5\n\n\n5\naudi\na4\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\ncompact\n42\n21.0\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n230\nvolkswagen\npassat\n2.0\n2008\n4\nauto(s6)\nf\n19\n28\np\nmidsize\n47\n23.5\n\n\n231\nvolkswagen\npassat\n2.0\n2008\n4\nmanual(m6)\nf\n21\n29\np\nmidsize\n50\n25.0\n\n\n232\nvolkswagen\npassat\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\nmidsize\n42\n21.0\n\n\n233\nvolkswagen\npassat\n2.8\n1999\n6\nmanual(m5)\nf\n18\n26\np\nmidsize\n44\n22.0\n\n\n234\nvolkswagen\npassat\n3.6\n2008\n6\nauto(s6)\nf\n17\n26\np\nmidsize\n43\n21.5\n\n\n\n\n234 rows × 13 columns\n\n\n\n\n\nQ3.\n\nmpg_copy.sort_values(\"mean_cty_hwy\", ascending = False).head(3)\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncty\nhwy\nfl\nclass\nsum_cty_hwy\nmean_cty_hwy\n\n\n\n\n222\nvolkswagen\nnew beetle\n1.9\n1999\n4\nmanual(m5)\nf\n35\n44\nd\nsubcompact\n79\n39.5\n\n\n213\nvolkswagen\njetta\n1.9\n1999\n4\nmanual(m5)\nf\n33\n44\nd\ncompact\n77\n38.5\n\n\n223\nvolkswagen\nnew beetle\n1.9\n1999\n4\nauto(l4)\nf\n29\n41\nd\nsubcompact\n70\n35.0\n\n\n\n\n\n\n\n\n\nQ4.\n\nmpg.assign(\n    sum_cty_hwy = mpg[\"cty\"] + mpg[\"hwy\"],\n    mean_cty_hwy = mpg[\"cty\"] + mpg[\"hwy\"] / 2 )\\\n    .sort_values(\"mean_cty_hwy\", ascending = False)\\\n    .head(3)\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncty\nhwy\nfl\nclass\nsum_cty_hwy\nmean_cty_hwy\n\n\n\n\n222\nvolkswagen\nnew beetle\n1.9\n1999\n4\nmanual(m5)\nf\n35\n44\nd\nsubcompact\n79\n57.0\n\n\n213\nvolkswagen\njetta\n1.9\n1999\n4\nmanual(m5)\nf\n33\n44\nd\ncompact\n77\n55.0\n\n\n223\nvolkswagen\nnew beetle\n1.9\n1999\n4\nauto(l4)\nf\n29\n41\nd\nsubcompact\n70\n49.5\n\n\n\n\n\n\n\n\n\nQ4. (책대로)\n\nmpg.assign(\n    total = lambda x: x[\"cty\"] + x[\"hwy\"],\n    mean_cty_hwy = lambda x: x[\"total\"] / 2 )\\\n    .sort_values(\"mean_cty_hwy\", ascending = False)\\\n    .head(3)\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncty\nhwy\nfl\nclass\ntotal\nmean_cty_hwy\n\n\n\n\n222\nvolkswagen\nnew beetle\n1.9\n1999\n4\nmanual(m5)\nf\n35\n44\nd\nsubcompact\n79\n39.5\n\n\n213\nvolkswagen\njetta\n1.9\n1999\n4\nmanual(m5)\nf\n33\n44\nd\ncompact\n77\n38.5\n\n\n223\nvolkswagen\nnew beetle\n1.9\n1999\n4\nauto(l4)\nf\n29\n41\nd\nsubcompact\n70\n35.0"
  },
  {
    "objectID": "posts/hw1/index.html#page",
    "href": "posts/hw1/index.html#page",
    "title": "LS 빅데이터 스쿨 homework1",
    "section": "",
    "text": "import pandas as pd\nx=pd.DataFrame({\"제품\":[\"사과\",\"딸기\",\"수박\"],\n                \"가격\":[1800,1500,3000],\n                \"판매량\":[24,38,13]})\nx\n\n\n\n\n\n\n\n\n제품\n가격\n판매량\n\n\n\n\n0\n사과\n1800\n24\n\n\n1\n딸기\n1500\n38\n\n\n2\n수박\n3000\n13\n\n\n\n\n\n\n\n\n\n\n\nprint(\"가격 평균 : \",sum(x[\"가격\"])/3)\nprint(\"판매량 평균 : \",sum(x[\"판매량\"])/3)\n\n가격 평균 :  2100.0\n판매량 평균 :  25.0"
  },
  {
    "objectID": "posts/hw1/index.html#page-1",
    "href": "posts/hw1/index.html#page-1",
    "title": "LS 빅데이터 스쿨 homework1",
    "section": "115 page",
    "text": "115 page\n\nimport pandas as pd\nimport pydataset\ndf=pd.read_csv(\"C:/Users/USER/Documents/LS빅데이터스쿨/PORTFOLIO/data/mpg.csv\")\ndf_mpg=df.copy()\n\ndf_mpg=df_mpg.rename(columns={\"cty\":\"city\"})\ndf_mpg=df_mpg.rename(columns={\"hwy\":\"highway\"})\ndf_mpg\n\n\n\n\n\n\n\n\nmanufacturer\nmodel\ndispl\nyear\ncyl\ntrans\ndrv\ncity\nhighway\nfl\ncategory\n\n\n\n\n0\naudi\na4\n1.8\n1999\n4\nauto(l5)\nf\n18\n29\np\ncompact\n\n\n1\naudi\na4\n1.8\n1999\n4\nmanual(m5)\nf\n21\n29\np\ncompact\n\n\n2\naudi\na4\n2.0\n2008\n4\nmanual(m6)\nf\n20\n31\np\ncompact\n\n\n3\naudi\na4\n2.0\n2008\n4\nauto(av)\nf\n21\n30\np\ncompact\n\n\n4\naudi\na4\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\ncompact\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n229\nvolkswagen\npassat\n2.0\n2008\n4\nauto(s6)\nf\n19\n28\np\nmidsize\n\n\n230\nvolkswagen\npassat\n2.0\n2008\n4\nmanual(m6)\nf\n21\n29\np\nmidsize\n\n\n231\nvolkswagen\npassat\n2.8\n1999\n6\nauto(l5)\nf\n16\n26\np\nmidsize\n\n\n232\nvolkswagen\npassat\n2.8\n1999\n6\nmanual(m5)\nf\n18\n26\np\nmidsize\n\n\n233\nvolkswagen\npassat\n3.6\n2008\n6\nauto(s6)\nf\n17\n26\np\nmidsize\n\n\n\n\n234 rows × 11 columns"
  },
  {
    "objectID": "posts/hw1/index.html#page-2",
    "href": "posts/hw1/index.html#page-2",
    "title": "LS 빅데이터 스쿨 homework1",
    "section": "130 page",
    "text": "130 page\n\nQ1.\n\nimport pandas as pd\nimport pydataset\n\ndf_midwest=pd.read_csv('C:/Users/USER/Documents/LS빅데이터스쿨/PORTFOLIO/data/midwest.csv')\ndf_midwest.head()\ndf_midwest.tail()\ndf_midwest.shape\ndf_midwest.info()\ndf_midwest.describe()\n\n&lt;class 'pandas.core.frame.DataFrame'&gt;\nRangeIndex: 437 entries, 0 to 436\nData columns (total 28 columns):\n #   Column                Non-Null Count  Dtype  \n---  ------                --------------  -----  \n 0   PID                   437 non-null    int64  \n 1   county                437 non-null    object \n 2   state                 437 non-null    object \n 3   area                  437 non-null    float64\n 4   poptotal              437 non-null    int64  \n 5   popdensity            437 non-null    float64\n 6   popwhite              437 non-null    int64  \n 7   popblack              437 non-null    int64  \n 8   popamerindian         437 non-null    int64  \n 9   popasian              437 non-null    int64  \n 10  popother              437 non-null    int64  \n 11  percwhite             437 non-null    float64\n 12  percblack             437 non-null    float64\n 13  percamerindan         437 non-null    float64\n 14  percasian             437 non-null    float64\n 15  percother             437 non-null    float64\n 16  popadults             437 non-null    int64  \n 17  perchsd               437 non-null    float64\n 18  percollege            437 non-null    float64\n 19  percprof              437 non-null    float64\n 20  poppovertyknown       437 non-null    int64  \n 21  percpovertyknown      437 non-null    float64\n 22  percbelowpoverty      437 non-null    float64\n 23  percchildbelowpovert  437 non-null    float64\n 24  percadultpoverty      437 non-null    float64\n 25  percelderlypoverty    437 non-null    float64\n 26  inmetro               437 non-null    int64  \n 27  category              437 non-null    object \ndtypes: float64(15), int64(10), object(3)\nmemory usage: 95.7+ KB\n\n\n\n\n\n\n\n\n\nPID\narea\npoptotal\npopdensity\npopwhite\npopblack\npopamerindian\npopasian\npopother\npercwhite\n...\nperchsd\npercollege\npercprof\npoppovertyknown\npercpovertyknown\npercbelowpoverty\npercchildbelowpovert\npercadultpoverty\npercelderlypoverty\ninmetro\n\n\n\n\ncount\n437.000000\n437.000000\n4.370000e+02\n437.000000\n4.370000e+02\n4.370000e+02\n437.000000\n437.000000\n437.000000\n437.000000\n...\n437.000000\n437.000000\n437.000000\n4.370000e+02\n437.000000\n437.000000\n437.000000\n437.000000\n437.000000\n437.000000\n\n\nmean\n1437.338673\n0.033169\n9.613030e+04\n3097.742985\n8.183992e+04\n1.102388e+04\n343.109840\n1310.464531\n1612.931350\n95.558441\n...\n73.965546\n18.272736\n4.447259\n9.364228e+04\n97.110267\n12.510505\n16.447464\n10.918798\n11.389043\n0.343249\n\n\nstd\n876.390266\n0.014679\n2.981705e+05\n7664.751786\n2.001966e+05\n7.895827e+04\n868.926751\n9518.394189\n18526.540699\n7.087358\n...\n5.843177\n6.261908\n2.408427\n2.932351e+05\n2.749863\n5.150155\n7.228634\n5.109166\n3.661259\n0.475338\n\n\nmin\n561.000000\n0.005000\n1.701000e+03\n85.050000\n4.160000e+02\n0.000000e+00\n4.000000\n0.000000\n0.000000\n10.694087\n...\n46.912261\n7.336108\n0.520291\n1.696000e+03\n80.902441\n2.180168\n1.918955\n1.938504\n3.547067\n0.000000\n\n\n25%\n670.000000\n0.024000\n1.884000e+04\n622.407407\n1.863000e+04\n2.900000e+01\n44.000000\n35.000000\n20.000000\n94.886032\n...\n71.325329\n14.113725\n2.997957\n1.836400e+04\n96.894572\n9.198715\n11.624088\n7.668009\n8.911763\n0.000000\n\n\n50%\n1221.000000\n0.030000\n3.532400e+04\n1156.208330\n3.447100e+04\n2.010000e+02\n94.000000\n102.000000\n66.000000\n98.032742\n...\n74.246891\n16.797562\n3.814239\n3.378800e+04\n98.169562\n11.822313\n15.270164\n10.007610\n10.869119\n0.000000\n\n\n75%\n2059.000000\n0.038000\n7.565100e+04\n2330.000000\n7.296800e+04\n1.291000e+03\n288.000000\n401.000000\n345.000000\n99.074935\n...\n77.195345\n20.549893\n4.949324\n7.284000e+04\n98.598636\n15.133226\n20.351878\n13.182182\n13.412162\n1.000000\n\n\nmax\n3052.000000\n0.110000\n5.105067e+06\n88018.396600\n3.204947e+06\n1.317147e+06\n10289.000000\n188565.000000\n384119.000000\n99.822821\n...\n88.898674\n48.078510\n20.791321\n5.023523e+06\n99.860384\n48.691099\n64.308477\n43.312464\n31.161972\n1.000000\n\n\n\n\n8 rows × 25 columns\n\n\n\n\n\nQ2.\n\ndf_midwest=df_midwest.rename(columns={\"poptotal\":\"total\"})\ndf_midwest=df_midwest.rename(columns={\"popasian\":\"asian\"})\ndf_midwest[[\"total\",\"asian\"]]\n\n\n\n\n\n\n\n\ntotal\nasian\n\n\n\n\n0\n66090\n249\n\n\n1\n10626\n48\n\n\n2\n14991\n16\n\n\n3\n30806\n150\n\n\n4\n5836\n5\n\n\n...\n...\n...\n\n\n432\n304715\n2699\n\n\n433\n46104\n92\n\n\n434\n19385\n43\n\n\n435\n140320\n1728\n\n\n436\n73605\n722\n\n\n\n\n437 rows × 2 columns\n\n\n\n\n\nQ3.\n\ndf_midwest[\"asian_ptg\"]= df_midwest[\"asian\"] / df_midwest[\"total\"] * 100\ndf_midwest\n\n\n\n\n\n\n\n\nPID\ncounty\nstate\narea\ntotal\npopdensity\npopwhite\npopblack\npopamerindian\nasian\n...\npercprof\npoppovertyknown\npercpovertyknown\npercbelowpoverty\npercchildbelowpovert\npercadultpoverty\npercelderlypoverty\ninmetro\ncategory\nasian_ptg\n\n\n\n\n0\n561\nADAMS\nIL\n0.052\n66090\n1270.961540\n63917\n1702\n98\n249\n...\n4.355859\n63628\n96.274777\n13.151443\n18.011717\n11.009776\n12.443812\n0\nAAR\n0.376759\n\n\n1\n562\nALEXANDER\nIL\n0.014\n10626\n759.000000\n7054\n3496\n19\n48\n...\n2.870315\n10529\n99.087145\n32.244278\n45.826514\n27.385647\n25.228976\n0\nLHR\n0.451722\n\n\n2\n563\nBOND\nIL\n0.022\n14991\n681.409091\n14477\n429\n35\n16\n...\n4.488572\n14235\n94.956974\n12.068844\n14.036061\n10.852090\n12.697410\n0\nAAR\n0.106731\n\n\n3\n564\nBOONE\nIL\n0.017\n30806\n1812.117650\n29344\n127\n46\n150\n...\n4.197800\n30337\n98.477569\n7.209019\n11.179536\n5.536013\n6.217047\n1\nALU\n0.486918\n\n\n4\n565\nBROWN\nIL\n0.018\n5836\n324.222222\n5264\n547\n14\n5\n...\n3.367680\n4815\n82.505140\n13.520249\n13.022889\n11.143211\n19.200000\n0\nAAR\n0.085675\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n432\n3048\nWAUKESHA\nWI\n0.034\n304715\n8962.205880\n298313\n1096\n672\n2699\n...\n7.667090\n299802\n98.387674\n3.121060\n3.785820\n2.590061\n4.085479\n1\nHLU\n0.885746\n\n\n433\n3049\nWAUPACA\nWI\n0.045\n46104\n1024.533330\n45695\n22\n125\n92\n...\n3.138596\n44412\n96.330036\n8.488697\n10.071411\n6.953799\n10.338641\n0\nAAR\n0.199549\n\n\n434\n3050\nWAUSHARA\nWI\n0.037\n19385\n523.918919\n19094\n29\n70\n43\n...\n2.620907\n19163\n98.854785\n13.786985\n20.050708\n11.695784\n11.804558\n0\nAAR\n0.221821\n\n\n435\n3051\nWINNEBAGO\nWI\n0.035\n140320\n4009.142860\n136822\n697\n685\n1728\n...\n5.659847\n133950\n95.460376\n8.804031\n10.592031\n8.660587\n6.661094\n1\nHAU\n1.231471\n\n\n436\n3052\nWOOD\nWI\n0.048\n73605\n1533.437500\n72157\n90\n481\n722\n...\n4.583725\n72685\n98.750085\n8.525831\n11.162997\n7.375656\n7.882918\n0\nAAR\n0.980912\n\n\n\n\n437 rows × 29 columns\n\n\n\n\n\nQ4.\n\nimport numpy as np\n\nasian_ptg_mean= sum(df_midwest[\"asian_ptg\"])/437\ndf_midwest[\"large_small\"]=np.where(df_midwest[\"asian_ptg\"] &gt; asian_ptg_mean, \"large\", \"small\")\ndf_midwest\n\n\n\n\n\n\n\n\nPID\ncounty\nstate\narea\ntotal\npopdensity\npopwhite\npopblack\npopamerindian\nasian\n...\npoppovertyknown\npercpovertyknown\npercbelowpoverty\npercchildbelowpovert\npercadultpoverty\npercelderlypoverty\ninmetro\ncategory\nasian_ptg\nlarge_small\n\n\n\n\n0\n561\nADAMS\nIL\n0.052\n66090\n1270.961540\n63917\n1702\n98\n249\n...\n63628\n96.274777\n13.151443\n18.011717\n11.009776\n12.443812\n0\nAAR\n0.376759\nsmall\n\n\n1\n562\nALEXANDER\nIL\n0.014\n10626\n759.000000\n7054\n3496\n19\n48\n...\n10529\n99.087145\n32.244278\n45.826514\n27.385647\n25.228976\n0\nLHR\n0.451722\nsmall\n\n\n2\n563\nBOND\nIL\n0.022\n14991\n681.409091\n14477\n429\n35\n16\n...\n14235\n94.956974\n12.068844\n14.036061\n10.852090\n12.697410\n0\nAAR\n0.106731\nsmall\n\n\n3\n564\nBOONE\nIL\n0.017\n30806\n1812.117650\n29344\n127\n46\n150\n...\n30337\n98.477569\n7.209019\n11.179536\n5.536013\n6.217047\n1\nALU\n0.486918\nsmall\n\n\n4\n565\nBROWN\nIL\n0.018\n5836\n324.222222\n5264\n547\n14\n5\n...\n4815\n82.505140\n13.520249\n13.022889\n11.143211\n19.200000\n0\nAAR\n0.085675\nsmall\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n432\n3048\nWAUKESHA\nWI\n0.034\n304715\n8962.205880\n298313\n1096\n672\n2699\n...\n299802\n98.387674\n3.121060\n3.785820\n2.590061\n4.085479\n1\nHLU\n0.885746\nlarge\n\n\n433\n3049\nWAUPACA\nWI\n0.045\n46104\n1024.533330\n45695\n22\n125\n92\n...\n44412\n96.330036\n8.488697\n10.071411\n6.953799\n10.338641\n0\nAAR\n0.199549\nsmall\n\n\n434\n3050\nWAUSHARA\nWI\n0.037\n19385\n523.918919\n19094\n29\n70\n43\n...\n19163\n98.854785\n13.786985\n20.050708\n11.695784\n11.804558\n0\nAAR\n0.221821\nsmall\n\n\n435\n3051\nWINNEBAGO\nWI\n0.035\n140320\n4009.142860\n136822\n697\n685\n1728\n...\n133950\n95.460376\n8.804031\n10.592031\n8.660587\n6.661094\n1\nHAU\n1.231471\nlarge\n\n\n436\n3052\nWOOD\nWI\n0.048\n73605\n1533.437500\n72157\n90\n481\n722\n...\n72685\n98.750085\n8.525831\n11.162997\n7.375656\n7.882918\n0\nAAR\n0.980912\nlarge\n\n\n\n\n437 rows × 30 columns\n\n\n\n\n\nQ5.\n\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\n\nplt.clf()\nlarge_small_count = df_midwest[\"large_small\"].value_counts()\nlarge_small_count.plot.bar(rot=0,color=\"red\")\nplt.show()\n\n# 또다른 그래프 만드는 방법\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n\nplt.clf()\nsns.countplot(data=df_midwest, x=\"large_small\", color=\"yellow\", dodge=True)\nplt.show()"
  },
  {
    "objectID": "posts/hw3/index.html",
    "href": "posts/hw3/index.html",
    "title": "LS 빅데이터 스쿨 homework3",
    "section": "",
    "text": "# 정규분포 pdf 값을 계산하는 자신만의\n# 파이썬 함수를 정의하고, \n# 정규분포 mu = 3, sigma = 2 의 pdf를 그릴 것.\n# 정규분포 pdf 값을 계산하는 자신만의\n# 파이썬 함수를 정의하고, \n# 정규분포 mu = 3, sigma = 2 의 pdf를 그릴 것.\nimport math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\nk = np.linspace(-4, 10, 100)\n\ndef normal_pdf(x, mu, sigma):\n    part1=(sigma * (math.sqrt(2*math.pi)))**(-1)\n    part2=np.exp(-(x-mu)**2/(2*sigma**2))\n    return part1 * part2\n\ny = normal_pdf(k, mu=3, sigma=2)\nplt.plot(k, y, color=\"pink\")\nplt.show()\nplt.clf()\n\n\n\n\n\n\n\n\n&lt;Figure size 672x480 with 0 Axes&gt;"
  },
  {
    "objectID": "posts/hw3/index.html#page",
    "href": "posts/hw3/index.html#page",
    "title": "LS 빅데이터 스쿨 homework3",
    "section": "204 page",
    "text": "204 page\n\nQ1.\n\nplt.clf()\nsns.scatterplot(data=mpg, x=\"cty\", y=\"hwy\")\nplt.show()\n\n\n\n\n\n\n\n\n\n\nQ2.\n\nplt.clf()\nsns.scatterplot(data=midwest, x=\"poptotal\", y=\"popasian\")\\\n    .set(xlim = [0,500000], ylim = [0,10000])\nplt.show()"
  },
  {
    "objectID": "posts/hw3/index.html#page-1",
    "href": "posts/hw3/index.html#page-1",
    "title": "LS 빅데이터 스쿨 homework3",
    "section": "211 page",
    "text": "211 page\n\nQ1.\n\nmpg_suv = mpg.query(\"category == 'suv'\")\nmpg2=mpg_suv.groupby(\"manufacturer\", as_index = False)\\\n             .agg(cty_mean=(\"cty\",\"mean\"))\nmpg2=mpg2.sort_values(\"cty_mean\", ascending=False).head(5)\nplt.clf()\nsns.barplot(data=mpg2, x=\"manufacturer\", y=\"cty_mean\", hue=\"manufacturer\")\nplt.show()\n\n\n\n\n\n\n\n\n\n\nQ2.\n\nmpg3=mpg.groupby(\"category\", as_index = False)\\\n             .agg(n=(\"category\",\"count\"))\nmpg3=mpg3.sort_values(\"n\", ascending=False)     \nplt.clf()\nsns.barplot(data=mpg3, x=\"category\", y=\"n\", hue=\"category\")\nplt.show()"
  },
  {
    "objectID": "posts/hw3/index.html#page-2",
    "href": "posts/hw3/index.html#page-2",
    "title": "LS 빅데이터 스쿨 homework3",
    "section": "316 page",
    "text": "316 page\n\nmpg데이터 활용\n\npx.scatter(data_frame=mpg, x=\"cty\", y=\"hwy\", color=\"drv\")\n\n                                                \n\n\n\n\nexam데이터 활용\n\npx.scatter(data_frame=exam, x=\"nclass\", y=\"math\", color=\"nclass\")"
  },
  {
    "objectID": "posts/hw3/index.html#q1.",
    "href": "posts/hw3/index.html#q1.",
    "title": "LS 빅데이터 스쿨 homework3",
    "section": "",
    "text": "# 정규분포 pdf 값을 계산하는 자신만의\n# 파이썬 함수를 정의하고, \n# 정규분포 mu = 3, sigma = 2 의 pdf를 그릴 것.\n# 정규분포 pdf 값을 계산하는 자신만의\n# 파이썬 함수를 정의하고, \n# 정규분포 mu = 3, sigma = 2 의 pdf를 그릴 것.\nimport math\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\nk = np.linspace(-4, 10, 100)\n\ndef normal_pdf(x, mu, sigma):\n    part1=(sigma * (math.sqrt(2*math.pi)))**(-1)\n    part2=np.exp(-(x-mu)**2/(2*sigma**2))\n    return part1 * part2\n\ny = normal_pdf(k, mu=3, sigma=2)\nplt.plot(k, y, color=\"pink\")\nplt.show()\nplt.clf()\n\n\n\n\n\n\n\n\n&lt;Figure size 672x480 with 0 Axes&gt;"
  },
  {
    "objectID": "posts/hw3/index.html#q2.",
    "href": "posts/hw3/index.html#q2.",
    "title": "LS 빅데이터 스쿨 homework3",
    "section": "Q2.",
    "text": "Q2.\n\n# 파이썬 scipy 패키지 사용해서 다음과 같은 확률을 구하시오.\n# X ~ N(2, 3^2)\n\nfrom scipy.stats import norm\n\n#1 P(X &lt; 3)\nnorm.cdf(3, loc=2, scale=3)\n\nnp.float64(0.6305586598182363)\n\n\n\n#2 P(2 &lt; X &lt; 5)\nnorm.cdf(5, loc=2, scale=3) - norm.cdf(2, loc=2, scale=3)\n\nnp.float64(0.3413447460685429)\n\n\n\n#3 P(X &lt; 3 or X &gt; 7)\nnorm.cdf(3, loc=2, scale=3) + (1-norm.cdf(7, loc=2, scale=3))\n\nnp.float64(0.678349012091051)"
  },
  {
    "objectID": "posts/hw3/index.html#q3.",
    "href": "posts/hw3/index.html#q3.",
    "title": "LS 빅데이터 스쿨 homework3",
    "section": "Q3.",
    "text": "Q3.\n\n# LS빅데이터 스쿨 학생들의 중간고사 점수는 \n# 평균이 30이고, 분산이 4인 정규분포\n# 상위 5%에 해당하는 학생 수는?\n\nx=np.arange(28)\nk = norm.pdf(x, loc=30, scale=2)\nsum(k&gt;0.01645)\n\nnp.int64(2)"
  },
  {
    "objectID": "posts/hw3인줄 알았던것.html",
    "href": "posts/hw3인줄 알았던것.html",
    "title": "LS 빅데이터 스쿨 homework3",
    "section": "",
    "text": "import pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport plotly.express as px\n\nmpg = pd.read_csv(\"C:/Users/USER/Documents/LS빅데이터스쿨/LsBigdata-project1/data/mpg.csv\")\n\nexam = pd.read_csv(\"C:/Users/USER/Documents/LS빅데이터스쿨/LsBigdata-project1/data/exam.csv\")\n\nmidwest = pd.read_csv(\"C:/Users/USER/Documents/LS빅데이터스쿨/LsBigdata-project1/data/midwest.csv\")"
  },
  {
    "objectID": "posts/hw3인줄 알았던것.html#page",
    "href": "posts/hw3인줄 알았던것.html#page",
    "title": "LS 빅데이터 스쿨 homework3",
    "section": "204 page",
    "text": "204 page\n\nQ1.\n\nplt.clf()\nsns.scatterplot(data=mpg, x=\"cty\", y=\"hwy\")\nplt.show()\n\n\n\n\n\n\n\n\n\n\nQ2.\n\nplt.clf()\nsns.scatterplot(data=midwest, x=\"poptotal\", y=\"popasian\")\\\n    .set(xlim = [0,500000], ylim = [0,10000])\nplt.show()"
  },
  {
    "objectID": "posts/hw3인줄 알았던것.html#page-1",
    "href": "posts/hw3인줄 알았던것.html#page-1",
    "title": "LS 빅데이터 스쿨 homework3",
    "section": "211 page",
    "text": "211 page\n\nQ1.\n\nmpg_suv = mpg.query(\"category == 'suv'\")\nmpg2=mpg_suv.groupby(\"manufacturer\", as_index = False)\\\n             .agg(cty_mean=(\"cty\",\"mean\"))\nmpg2=mpg2.sort_values(\"cty_mean\", ascending=False).head(5)\nplt.clf()\nsns.barplot(data=mpg2, x=\"manufacturer\", y=\"cty_mean\", hue=\"manufacturer\")\nplt.show()\n\n\n\n\n\n\n\n\n\n\nQ2.\n\nmpg3=mpg.groupby(\"category\", as_index = False)\\\n             .agg(n=(\"category\",\"count\"))\nmpg3=mpg3.sort_values(\"n\", ascending=False)     \nplt.clf()\nsns.barplot(data=mpg3, x=\"category\", y=\"n\", hue=\"category\")\nplt.show()"
  },
  {
    "objectID": "posts/hw3인줄 알았던것.html#page-2",
    "href": "posts/hw3인줄 알았던것.html#page-2",
    "title": "LS 빅데이터 스쿨 homework3",
    "section": "316 page",
    "text": "316 page\n\nmpg데이터 활용\n\npx.scatter(data_frame=mpg, x=\"cty\", y=\"hwy\", color=\"drv\")\n\n                                                \n\n\n\n\nexam데이터 활용\n\npx.scatter(data_frame=exam, x=\"nclass\", y=\"math\", color=\"nclass\")"
  },
  {
    "objectID": "posts/etc/index.html",
    "href": "posts/etc/index.html",
    "title": "LS 빅데이터 스쿨 homework_etc",
    "section": "",
    "text": "import pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport plotly.express as px\n\nmpg = pd.read_csv(\"C:/Users/USER/Documents/LS빅데이터스쿨/LsBigdata-project1/data/mpg.csv\")\n\nexam = pd.read_csv(\"C:/Users/USER/Documents/LS빅데이터스쿨/LsBigdata-project1/data/exam.csv\")\n\nmidwest = pd.read_csv(\"C:/Users/USER/Documents/LS빅데이터스쿨/LsBigdata-project1/data/midwest.csv\")"
  },
  {
    "objectID": "posts/etc/index.html#page",
    "href": "posts/etc/index.html#page",
    "title": "LS 빅데이터 스쿨 homework_etc",
    "section": "204 page",
    "text": "204 page\n\nQ1.\n\nplt.clf()\nsns.scatterplot(data=mpg, x=\"cty\", y=\"hwy\")\nplt.show()\n\n\n\n\n\n\n\n\n\n\nQ2.\n\nplt.clf()\nsns.scatterplot(data=midwest, x=\"poptotal\", y=\"popasian\")\\\n    .set(xlim = [0,500000], ylim = [0,10000])\nplt.show()"
  },
  {
    "objectID": "posts/etc/index.html#page-1",
    "href": "posts/etc/index.html#page-1",
    "title": "LS 빅데이터 스쿨 homework_etc",
    "section": "211 page",
    "text": "211 page\n\nQ1.\n\nmpg_suv = mpg.query(\"category == 'suv'\")\nmpg2=mpg_suv.groupby(\"manufacturer\", as_index = False)\\\n             .agg(cty_mean=(\"cty\",\"mean\"))\nmpg2=mpg2.sort_values(\"cty_mean\", ascending=False).head(5)\nplt.clf()\nsns.barplot(data=mpg2, x=\"manufacturer\", y=\"cty_mean\", hue=\"manufacturer\")\nplt.show()\n\n\n\n\n\n\n\n\n\n\nQ2.\n\nmpg3=mpg.groupby(\"category\", as_index = False)\\\n             .agg(n=(\"category\",\"count\"))\nmpg3=mpg3.sort_values(\"n\", ascending=False)     \nplt.clf()\nsns.barplot(data=mpg3, x=\"category\", y=\"n\", hue=\"category\")\nplt.show()"
  },
  {
    "objectID": "posts/etc/index.html#page-2",
    "href": "posts/etc/index.html#page-2",
    "title": "LS 빅데이터 스쿨 homework_etc",
    "section": "316 page",
    "text": "316 page\n\nmpg데이터 활용\n\npx.scatter(data_frame=mpg, x=\"cty\", y=\"hwy\", color=\"drv\")\n\n                                                \n\n\n\n\nexam데이터 활용\n\npx.scatter(data_frame=exam, x=\"nclass\", y=\"math\", color=\"nclass\")"
  }
]