---
title: "Project1-4.여행을 선택하는 이유"
jupyter: python3
categories: [project1] 
---

## 데이터 전처리

### 파일 불러오기 및 변수 변경

```{python}

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt

# 파일 불러오기
df = pd.read_excel("C:/Users/USER/Documents/LS빅데이터스쿨/PORTFOLIO/data/select.xlsx")
df.head()

# 변수 변경
df = df.rename(columns = {"소계" : "total", "남자" : "male", "여자" : "female"})
df.head()

```

### 연령대 변수 추가 및 삭제
```{python}
# 연령대
df["teens"] = df["15~19세"]
df["young_adults"] = df["20대"] + df["30대"]
df["middle_adults"] = df["40대"] + df["50대"]
df["senior"] = df["60대"] + df["70세 이상"]

#2018 각 값을 열의 합계로 나눈뒤 100을 곱하여 백분율 계산. 소수점 1까지 반올림
df.loc[0:14, "young_adults"] = (df.loc[0:14, "young_adults"] / df.loc[0:14, "young_adults"].sum() * 100).round(1)
df.loc[0:14, "middle_adults"] = (df.loc[0:14, "middle_adults"] / df.loc[0:14, "middle_adults"].sum() * 100).round(1)
df.loc[0:14, "senior"] = (df.loc[0:14, "senior"] / df.loc[0:14, "senior"].sum() * 100).round(1)
#2019
df.loc[15:29, "young_adults"] = (df.loc[15:29, "young_adults"] / df.loc[15:29, "young_adults"].sum() * 100).round(1)
df.loc[15:29, "middle_adults"] = (df.loc[15:29, "middle_adults"] / df.loc[15:29, "middle_adults"].sum() * 100).round(1)
df.loc[15:29, "senior"] = (df.loc[15:29, "senior"] / df.loc[15:29, "senior"].sum() * 100).round(1)
#2020
df.loc[30:44, "young_adults"] = (df.loc[30:44, "young_adults"] / df.loc[30:44, "young_adults"].sum() * 100).round(1)
df.loc[30:44, "middle_adults"] = (df.loc[30:44, "middle_adults"] / df.loc[30:44, "middle_adults"].sum() * 100).round(1)
df.loc[30:44, "senior"] = (df.loc[30:44, "senior"] / df.loc[30:44, "senior"].sum() * 100).round(1)
#2021
df.loc[45:59, "young_adults"] = (df.loc[45:59, "young_adults"] / df.loc[45:59, "young_adults"].sum() * 100).round(1)
df.loc[45:59, "middle_adults"] = (df.loc[45:59, "middle_adults"] / df.loc[45:59, "middle_adults"].sum() * 100).round(1)
df.loc[45:59, "senior"] = (df.loc[45:59, "senior"] / df.loc[45:59, "senior"].sum() * 100).round(1)
#2022
df.loc[60:74, "young_adults"] = (df.loc[60:74, "young_adults"] / df.loc[60:74, "young_adults"].sum() * 100).round(1)
df.loc[60:74, "middle_adults"] = (df.loc[60:74, "middle_adults"] / df.loc[60:74, "middle_adults"].sum() * 100).round(1)
df.loc[60:74, "senior"] = (df.loc[60:74, "senior"] / df.loc[60:74, "senior"].sum() * 100).round(1)

df = df.drop(['15~19세', '20대', '30대', '40대', '50대', '60대', '70세 이상'], axis=1)
```

### 월급 변수 추가 및 삭제
```{python}
df["l_sal"] = df["100만원 미만"] + df["100~200만원 미만"]
df["m_sal"] = df["200~300만원 미만"] + df["300~400만원 미만"] + df["400~500만원 미만"]
df["h_sal"] = df["500~600만원 미만"] + df["600만원 이상"]
#2018
df.loc[0:14, "l_sal"] = (df.loc[0:14, "l_sal"] / df.loc[0:14, "l_sal"].sum() * 100).round(1)
df.loc[0:14, "m_sal"] = (df.loc[0:14, "m_sal"] / df.loc[0:14, "m_sal"].sum() * 100).round(1)
df.loc[0:14, "h_sal"] = (df.loc[0:14, "h_sal"] / df.loc[0:14, "h_sal"].sum() * 100).round(1)
#2019
df.loc[15:29, "l_sal"] = (df.loc[15:29, "l_sal"] / df.loc[15:29, "l_sal"].sum() * 100).round(1)
df.loc[15:29, "m_sal"] = (df.loc[15:29, "m_sal"] / df.loc[15:29, "m_sal"].sum() * 100).round(1)
df.loc[15:29, "h_sal"] = (df.loc[15:29, "h_sal"] / df.loc[15:29, "h_sal"].sum() * 100).round(1)
#2020
df.loc[30:44, "l_sal"] = (df.loc[30:44, "l_sal"] / df.loc[30:44, "l_sal"].sum() * 100).round(1)
df.loc[30:44, "m_sal"] = (df.loc[30:44, "m_sal"] / df.loc[30:44, "m_sal"].sum() * 100).round(1)
df.loc[30:44, "h_sal"] = (df.loc[30:44, "h_sal"] / df.loc[30:44, "h_sal"].sum() * 100).round(1)
#2021
df.loc[45:59, "l_sal"] = (df.loc[45:59, "l_sal"] / df.loc[45:59, "l_sal"].sum() * 100).round(1)
df.loc[45:59, "m_sal"] = (df.loc[45:59, "m_sal"] / df.loc[45:59, "m_sal"].sum() * 100).round(1)
df.loc[45:59, "h_sal"] = (df.loc[45:59, "h_sal"] / df.loc[45:59, "h_sal"].sum() * 100).round(1)
#2022
df.loc[60:74, "l_sal"] = (df.loc[60:74, "l_sal"] / df.loc[60:74, "l_sal"].sum() * 100).round(1)
df.loc[60:74, "m_sal"] = (df.loc[60:74, "m_sal"] / df.loc[60:74, "m_sal"].sum() * 100).round(1)
df.loc[60:74, "h_sal"] = (df.loc[60:74, "h_sal"] / df.loc[60:74, "h_sal"].sum() * 100).round(1)


df = df.drop(['100만원 미만', '100~200만원 미만', '200~300만원 미만', '300~400만원 미만', '400~500만원 미만',\
                '500~600만원 미만', '600만원 이상'], axis=1)
                
```

### 가구, 학벌 및 무응답 변수명 바꾸기 

```{python}
# 가구
df = df.rename(columns = { '1인' : 'per1',
			'2인' : 'per2',
			'3인이상' : 'per3+'})

# 학벌
df = df.rename(columns = { '초졸 이하' : 'elmt',
			 '중학교' : 'mid',
			'고등학교' : 'high',
			'대학교이상' : 'univ+'})
# 무응답 NR
df = df.rename(columns = {"무응답" : "nr",
                        "시점" : "year",
                        "항목" : "item"})
                        
# 데이터 전처리 결과 확인하기
df.head(5)
```

### 전처리한 데이터 파일 추출
```{python}

# 엑셀 파일로 내보내기
df.to_excel('C:/Users/USER/Documents/LS빅데이터스쿨/PORTFOLIO/pre_data/pre_select.xlsx', index=False)

```
---------------------------------------------------------------
## 데이터 시각화

### 1. 년도별 여행지 선택 5순위

```{python}
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import plotly.express as px

# 한글 설정
plt.rcParams['font.family'] ='Malgun Gothic'
plt.rcParams['axes.unicode_minus'] =False

df = pd.read_excel("C:/Users/USER/Documents/LS빅데이터스쿨/PORTFOLIO/pre_data/pre_select.xlsx")
df

df_2018 = df.loc[0:14]
df_2019 = df.loc[15:29]
df_2020 = df.loc[30:44]
df_2021 = df.loc[45:59]
df_2022 = df.loc[60:74]

total_2018 = df_2018.sort_values("total", ascending = False).head()
total_2019 = df_2019.sort_values("total", ascending = False).head()
total_2020 = df_2020.sort_values("total", ascending = False).head()
total_2021 = df_2021.sort_values("total", ascending = False).head()
total_2022 = df_2022.sort_values("total", ascending = False).head()

total_all = pd.concat([total_2018, total_2019, total_2020, total_2021, total_2022]).iloc[:, :3]
total_all_pivot = total_all.pivot(index='year', columns='item', values='total')


fig = px.bar(total_all_pivot, title='년도별 여행지 선택 5순위', labels={'value': '총합', 'year': '년도'})
# 레이아웃 설정
fig.update_layout(
    xaxis_title='년도',
    yaxis_title='총합',
    legend_title_text='Item',
    legend=dict(
        x=1,  # x 위치 (1은 그래프의 가장 오른쪽)
        y=1,  # y 위치 (1은 그래프의 가장 위쪽)
        xanchor='left',  # x 기준점
        yanchor='top'  # y 기준점
    )
)

fig.show()

```

### 2. 여행을 선택하는 이유

```{python}
from matplotlib.ticker import MaxNLocator

#선 그래프
visualappeal = total_all.query("item == '볼거리 제공'")
Popularity = total_all.query("item == '여행지 지명도'")
time = total_all.query("item == '여행할 수 있는 시간'")


# 선 그래프 생성
plt.figure(figsize=(10, 6))
plt.plot(visualappeal["year"], visualappeal["total"], marker='o',label="볼거리 제공")
plt.plot(Popularity["year"], Popularity["total"], marker='o',label="여행지 지명도")
plt.plot(time["year"], time["total"], marker='o',label="여행할 수 있는 시간")


# 그래프에 제목과 축 레이블 추가
plt.title("여행을 선택하는 이유 - 전체")
plt.xlabel("년도")
plt.ylabel("전체 %")
plt.legend(fontsize='x-small',loc='center left')
plt.gca().xaxis.set_major_locator(MaxNLocator(integer=True))
plt.show()

```

## 결론

여행지 선택 이유로는 볼거리 제공과 여행지 지명도가 가장 많은 비중을 차지. 그러나 2019년에 들어서면서 여행할 수 있는 시간이 중요한 이유로 급부상. 이러한 변화는 여행객들의 가치관이 변화하고 있음을 시사.
