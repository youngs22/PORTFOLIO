---
title: "Project2 AMES의 교육 관련"
jupyter: python3
date: "2024-08-14"
author: "youna"
format: 
  dashboard:
    scrolling: true
    logo: "C:/Users/USER/Documents/LS빅데이터스쿨/testdashboard/houseprice_logo.png"
freeze: true
categories: [project2] 
---

## Row {width="50%"}
```{python}
#| output: false
import pandas as pd
import plotly.express as px

major = pd.read_csv('C:/Users/USER/Documents/LS빅데이터스쿨/testdashboard/Majors Awarded.csv')

major["Completions"] = major["Completions"].astype(int)


fig = px.treemap(major,
                 path=[px.Constant('All Majors'), 'CIP2', 'CIP4'], 
                 values='Completions',
                 color='CIP2',  
                 hover_data=['Completions'], 
                 color_discrete_sequence=   px.colors.qualitative.Pastel2 + px.colors.qualitative.Set3 + px.colors.qualitative.Pastel
                )

# 선택/해제 가능한 항목의 설정
fig.update_layout(
    clickmode='event+select',  # 클릭 시 이벤트와 선택 모드 활성화
    dragmode='select'   # 드래그 모드 설정
)
```

```{python}
#| title: 전공 선호도
fig.show()
```

```{python}
#| output: false
import pandas as pd
import plotly.express as px

# 데이터 불러오기
major = pd.read_csv('C:/Users/USER/Documents/LS빅데이터스쿨/LsBigdata-project1/data/Majors Awarded_2022.csv')

# 데이터 전처리
major["Completions"] = major["Completions"].astype(int)
              
major = major.sort_values(by="Year", ascending=True)

# 애니메이션 막대 그래프 그리기
fig_major = px.bar(major,
             x="CIP2",
             y= "Completions",
             color="CIP4",          # 색상으로 중그룹(CIP4)을 설정하여 누적 표시
             animation_frame="Year", # 연도를 애니메이션 프레임으로 설정
             title="Yearly Major Groups with Sub-Groups",
             labels={"Completions": "Number of Completions"},
             height=600,
             width=900)

# 레이아웃 업데이트
fig_major.update_layout(
    barmode='stack',   
    xaxis_title="전공 중분류",  # X축 제목
    autosize=True,                  # 그래프 크기 자동 조정
    xaxis=dict(tickangle=30)       # X축 레이블 기울이기
)
```

```{python}
#| title: 연도별 전공 선호도
fig_major.show()
```

## Row {width="50%"}
```{python}
#| output: false

import pandas as pd
import plotly.graph_objects as go
from plotly.subplots import make_subplots
import plotly.express as px


job = pd.read_csv('C:/Users/USER/Documents/LS빅데이터스쿨/testdashboard/Common Jobs by Major.csv')

job["Detailed Occupation"] = job["Detailed Occupation"].replace(
    "Miscellaneous engineers, including nuclear engineers", 
    "Miscellaneous engineers"
)

job_2022 = job.query("Year==2022")

fig_px = px.bar(
    job_2022, 
    x='Detailed Occupation', 
    y='Total Population', 
    color='CIP2',
)
```

```{python}
#| title: 직업별 전공
fig_px.show()
```


```{python}
#| output: false
import pandas as pd
import plotly.graph_objects as go
from plotly.subplots import make_subplots
import plotly.express as px


job = pd.read_csv('C:/Users/USER/Documents/LS빅데이터스쿨/testdashboard/Common Jobs by Major.csv')

job["Detailed Occupation"] = job["Detailed Occupation"].replace(
    "Miscellaneous engineers, including nuclear engineers", 
    "Miscellaneous engineers"
)

fig_subplot = make_subplots(
    rows=4, cols=2,
    specs=[[{'colspan': 2, 'rowspan': 2}, None],
           [None, None],
           [{}, {}],
           [{}, {}]],
    subplot_titles=("2022","2021","2020","2019","2018")
)

job_2022 = job.query("Year==2022")\
              .sort_values(by="Total Population", ascending=False)\
              .head(5)
              
job_2021 = job.query("Year==2021")\
              .groupby("Detailed Occupation", as_index=False)\
              .agg({"Total Population": "sum"})\
              .sort_values(by="Total Population", ascending=False)\
              .head(5)
              
job_2020 = job.query("Year==2020")\
              .groupby("Detailed Occupation", as_index=False)\
              .agg({"Total Population": "sum"})\
              .sort_values(by="Total Population", ascending=False)\
              .head(5)
              
job_2019 = job.query("Year==2019")\
              .groupby("Detailed Occupation", as_index=False)\
              .agg({"Total Population": "sum"})\
              .sort_values(by="Total Population", ascending=False)\
              .head(5)
              
job_2018 = job.query("Year==2018")\
              .groupby("Detailed Occupation", as_index=False)\
              .agg({"Total Population": "sum"})\
              .sort_values(by="Total Population", ascending=False)\
              .head(5)

fig_subplot.add_trace(
    go.Bar(
        x=job_2022["Detailed Occupation"],
        y=job_2022["Total Population"],
        name="2022"
        ), 
    row=1, col=1
)


fig_subplot.add_trace(
    go.Bar(
        x=job_2021["Detailed Occupation"],
        y=job_2021["Total Population"],
        name="2021"
        ), 
    row=3, col=1
)



fig_subplot.add_trace(
    go.Bar(
        x=job_2020["Detailed Occupation"],
        y=job_2020["Total Population"],
        name="2020"
        ), 
    row=3, col=2
)

fig_subplot.add_trace(
    go.Bar(
        x=job_2019["Detailed Occupation"],
        y=job_2019["Total Population"],
        name="2019"
        ), 
        
    row=4, col=1
)

fig_subplot.add_trace(
    go.Bar(
        x=job_2018["Detailed Occupation"],
        y=job_2018["Total Population"],
        name="2018"
        ), 
        
    row=4, col=2
)

# x축 레이블 기울이기
fig_subplot.update_xaxes(tickangle=15, row=3, col=1)
fig_subplot.update_xaxes(tickangle=15, row=3, col=2)
fig_subplot.update_xaxes(tickangle=15, row=4, col=1)
fig_subplot.update_xaxes(tickangle=15, row=4, col=2)

```


```{python}
#| title: 연도별 직업 선호도
fig_subplot.show()
```
